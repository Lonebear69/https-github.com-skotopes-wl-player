package {        import flash.display.Stage;	import flash.events.Event;		public class FramerateThrottler {				protected static var _activeFramerate:Number;		protected static var _backgroundFramerate:Number;        		protected static var _active:Boolean=false;		protected static var _enabled:Boolean=true;		        protected static var _stage:Stage;        		public static function initialize(schedStage:Stage, backgroundFramerate:Number=1,activeFramerate:Number=NaN):void {            _stage = schedStage;			if (!isNaN(activeFramerate) && activeFramerate > 0) {				_activeFramerate = activeFramerate;			} else {				_activeFramerate = _stage.frameRate;			}            			_backgroundFramerate = backgroundFramerate;			_stage.addEventListener(Event.DEACTIVATE, handleDeactivate);		}				public static function set enabled(value:Boolean):void {			if (value == _enabled) { return; }			_enabled = value;			if (!_active && !_enabled) {				restoreFramerate();			} else if (!_active && _enabled) {				throttleFramerate();			}		}        		public static function get enabled():Boolean {			return _enabled;		}				public static function get active():Boolean {			return _active;		}				protected static function restoreFramerate():void {            _stage.frameRate = _activeFramerate;		}				protected static function throttleFramerate():void {            _activeFramerate = _stage.frameRate;            _stage.frameRate = _backgroundFramerate;		}        		protected static function handleDeactivate(evt:Event):void {			_active = false;			if (_enabled) { throttleFramerate(); }			_stage.removeEventListener(Event.DEACTIVATE, handleDeactivate);			_stage.addEventListener(Event.ACTIVATE, handleActivate);		}				protected static function handleActivate(evt:Event):void {			_active = true;			if (_enabled) { restoreFramerate(); }			_stage.removeEventListener(Event.ACTIVATE, handleActivate);			_stage.addEventListener(Event.DEACTIVATE, handleDeactivate);		}	}}